# Default values for unity-accelerator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

namespace: unity-accelerator

image:
  repository: unitytechnologies/accelerator
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.0.946-g7cc8240"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# If this option is set to false a StateFulset instead of a Deployment is used
useDeploy: true

unityAccelerator:
  # Token for https://unity.com/products/unity-teams
  collab_registration_token: ""
  # Set to true to disable usage stats – leaving usage stats enabled can help improve the Accelerator’s features and performance by giving Unity valuable feedback.
  disable_usage_stats: true
  # The user name for the local, built-in dashboard.
  user: unity-user
  # The password for the local, built-in dashboard.
  password: TEMPINSECUREPASS
  # Container default is true. This, if true, will output logs to stdout only; false if you want actual log files written within the persist directory.
  log_stdout: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "accelerator"

podAnnotations: {}
podLabels:
  {}
  # app: unity-accelerator

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 10080
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: unity-accelerator.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

volume:
  enabled: true
  accessMode: ReadWriteOnce
  size: 20Gi
  # If you want to use a storage class other than the default, uncomment this
  # line and define the storage class name
  # storageClassName: